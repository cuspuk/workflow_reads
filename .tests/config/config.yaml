reads: # Specify the order and methods for each read processing step. If no method is specified, the step will not be performed.
  subsampling: "seqtk" # OPT - specify method of subsampling. Allowed: "seqtk", "null".
  trimming: "cutadapt" # OPT - specify method of trimming. Allowed: "cutadapt", "null".
  decontamination: "kraken" # OPT - specify method of decontamination. Allowed: "kraken", "null".
  deduplication: "fastuniq" # OPT - specify method of deduplication. Allowed: "fastuniq", "null".
  _generate_fastqc_for: ["deduplication"] # OPT - specify which steps to generate fastqc for. Allowed: "original"."subsampling", "trimming", "decontamination", "deduplication" or empty list (default: empty list).

### HYPERPARAMETERS #############################

reads__subsampling__seqtk:
  seed: 1
  n_reads: 5
  reduce_memory: false

reads__trimming__cutadapt:
  # 1st stage - trimming
  cut_from_start_r1: 1 # OPT - removes a specified number of bases from the beginning of the R1 read.
  cut_from_start_r2: null # OPT - removes a specified number of bases from the beginning of the R2 read.
  cut_from_end_r1: null # OPT - removes a specified number of bases from the end of the R1 read.
  cut_from_end_r2: 1 # OPT - removes a specified number of bases from the end of the R2 read.
  quality_cutoff_from_5_end_r1: 20 # cutoff on 5' end of R1 read. The second step.
  quality_cutoff_from_3_end_r1: 20 # cutoff on 3' end of R1 read. The second step.
  quality_cutoff_from_5_end_r2: 20 # cutoff on 5' end of R2 read. The second step.
  quality_cutoff_from_3_end_r2: 20 # cutoff on 3' end of R2 read. The second step.
  nextseq_trimming_mode: false # Modify quality-trimming algorithm to expect two-color chemistry data (NextSeq). This masks G bases to zero quality for R1 3'. Thus, `quality_cutoff_from_3_end_r1` must be defined.
  do_adapter_removal: false
  shorten_to_length: 500 # OPT - both R1 and R2 are shortened to this length.
  trim_N_bases_on_ends: true # OPT - trim flanking N's on both read ends.
  min_length_r1: 1 # OPT - minimum R1 read length. If R1 read is shorter, both R1 and R2 reads are discarded. The fourth step.
  min_length_r2: 1 # OPT - minimum R2 read length. If R2 read is shorter, both R1 and R2 reads are discarded. The fourth step.
  max_length_r1: 300 # OPT - maximum R1 read length. If R1 read is longer, both R1 and R2 reads are discarded. The fourth step.
  max_length_r2: 300 # OPT - maximum R2 read length. If R2 read is longer, both R1 and R2 reads are discarded. The fourth step.
  max_n_bases: 5 # OPT - Discard read if R1 or R2 has more than the specified number of N bases. The fifth step.
  max_expected_errors: 5 # OPT - Discard read if R1 or R2 has more expected errors than this.

reads__decontamination__kraken:
  kraken_dir: "path_to_kraken/k2_viral_20230314" # Directory containing kraken DB files. If does not exist, will be downloaded using the dirname.
  # get KRAKEN_TAG from https://benlangmead.github.io/aws-indexes/k2
  taxa_ids: # list of taxonomy IDs to exclude.
    - 9606 # Homo Sapiens
  filter_mode: "exclude"
  filter_children: false # Whether to exclude reads classified at more specific levels than specified taxonomy ID levels.
  filter_ancestors: false # Whether to exclude reads classified at all taxonomy levels between root and the specified taxonomy ID levels.
  save_memory: true # If true, kraken limits RAM memory usage but sacrifices speed.
  generate_krona: false # If true, krona is generated from kraken report
  krona_dir: null #"path_to_krona/{TIMESTAMP}"

reads__deduplication__fastuniq: {}

### RESOURCES #############################

max_threads: 2
max_mem_mb: 6192

resources:
  reads__trimming_mem_mb: 4096
  reads__fastqc_mem_mb: 2048

threads:
  reads__trimming: 4
  reads__fastqc: 1
  reads__deduplication: 4
  reads__decontamination: 8
